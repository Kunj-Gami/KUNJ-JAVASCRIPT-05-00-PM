### **UDF Project - Day 1: Mastering JavaScript Functions** 🚀

#### **Storyline:**
You are now a **junior developer** tasked with building a dynamic web application. The key to making your app interactive and organized is learning how to use **User Defined Functions (UDFs)** in JavaScript. Functions are the building blocks that help you create reusable and modular code, making your app scalable and easier to maintain. 

Today, you’ll dive into creating functions, which will unlock the power of organizing and reusing your code. Think of each function as a tool in your developer toolkit—ready to be pulled out when needed!

By the end of Day 1, you’ll be able to:
- Create simple and advanced functions.
- Use functions with parameters to make your code dynamic.
- Understand how to return values and use functions in various ways.

Let’s get started!

---

### **Task 1: Creating Your First Function - The "Greet User" Function** 👋

**Objective:**
You’re building a friendly web app that greets users by their name. The first task is to create a function that welcomes users.

#### **How to do it:**
1. **Create a function** named `greetUser`. 
2. This function should **take one parameter**: `name` (which represents the user's name).
3. **Return** a greeting message: `"Hello, <name>!"`.
4. **Test your function** by calling it with different names.

**Example:**
- Input: `"John"`
- Output: `"Hello, John!"`

---

### **Task 2: Function with Multiple Parameters - Calculating the Sum** ➕

**Objective:**
You’re building a calculator app, and you need to create a function that can calculate the sum of two numbers.

#### **How to do it:**
1. **Create a function** named `calculateSum`.
2. The function should take **two parameters**: `num1` and `num2`.
3. **Return the sum** of `num1` and `num2`.

**Example:**
- Input: `5` and `3`
- Output: `8`

---

### **Task 3: Returning Values from Functions - Multiply Numbers** ✖️

**Objective:**
Now, you want to extend your calculator app by adding a multiplication feature. Let’s create a function to multiply two numbers.

#### **How to do it:**
1. **Create a function** named `multiplyNumbers`.
2. The function should take **two parameters**: `num1` and `num2`.
3. **Return** the product of `num1` and `num2`.

**Example:**
- Input: `4` and `6`
- Output: `24`

---

### **Task 4: Function Without Parameters - Display Current Date** 📅

**Objective:**
You want to show the current date on your app every time the user visits. Let’s create a function that does this.

#### **How to do it:**
1. **Create a function** called `displayCurrentDate`.
2. The function **does not require any parameters**.
3. Use the `Date` object in JavaScript to get today’s date and **display it in the console**.

---

### **Task 5: Function Expression - Square of a Number** 🔲

**Objective:**
You want to create a quick and easy function that can calculate the square of a number. In this task, you’ll use a **function expression**.

#### **How to do it:**
1. **Create a function expression** assigned to a variable named `squareNumber`.
2. The function should **take one parameter**: `num` and return the square of that number (i.e., `num * num`).
3. Call the function with a sample number to see the result.

**Example:**
- Input: `5`
- Output: `25`

---

### **Task 6: Anonymous Function - Button Click Event** 👇

**Objective:**
You’ll now make your app interactive by handling a button click event. When a user clicks a button, you want to display a message. This task will help you understand **anonymous functions**.

#### **How to do it:**
1. Create an **anonymous function** that displays a message when the button is clicked.
2. Use the `addEventListener` method to trigger the function on a button click.
3. The message can be something like `"Button Clicked!"`, but feel free to customize it!

**Example (in HTML + JS):**
- A button on the webpage that calls an anonymous function to display a message when clicked.

---

### **Summary of Day 1 Goals** 📚:
- **Understanding Functions:** You’ve learned how to create functions and call them with parameters and return values.
- **Modularity & Reusability:** Functions allow you to reuse blocks of code, making your app more efficient and easier to maintain.
- **Different Function Types:** You explored **function declarations**, **function expressions**, and **anonymous functions**.

---

### **Next Steps** 🏁:
- After Day 1, you’ll be able to integrate more complex functionality into your app, using these functions to make dynamic, interactive features.
- Tomorrow, we’ll focus on **working with data**, such as arrays and objects, and how to combine them with functions.

### **Keep Going!**
Your journey as a JavaScript developer is just beginning, and today you've mastered some of the most powerful tools in your toolkit: **functions**. Keep experimenting with different types of functions, and get creative with how you use them in your projects!

---

Happy coding, 🎉👩‍💻👨‍💻
